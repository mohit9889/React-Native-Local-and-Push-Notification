{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\DATA\\\\react-native\\\\Cart-notification\\\\navigation\\\\ShopNavigator.js\";\nimport React, { useEffect } from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\nimport ProductsOverviewScreen, { screenOptions as productsOverviewScreenOptions } from \"../screens/shop/ProductsOverviewScreen\";\nimport ProductDetailScreen, { screenOptions as productDetailScreenOptions } from \"../screens/shop/ProductDetailScreen\";\nimport CartScreen, { screenOptions as cartScreenOptions } from \"../screens/shop/CartScreen\";\nimport OrdersScreen, { screenOptions as ordersScreenOptions } from \"../screens/shop/OrdersScreen\";\nimport UserProductsScreen, { screenOptions as userProductsScreenOptions } from \"../screens/user/UserProductsScreen\";\nimport EditProductScreen, { screenOptions as editProductScreenOptions } from \"../screens/user/EditProductScreen\";\nimport AuthScreen, { screenOptions as authScreenOptions } from \"../screens/user/AuthScreen\";\nimport StartupScreen from \"../screens/StartupScreen\";\nimport Colors from \"../constants/Colors\";\nimport * as authActions from \"../store/actions/auth\";\nvar defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === 'android' ? Colors.primary : ''\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans-bold'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primary\n};\nvar ProductsStackNavigator = createStackNavigator();\nexport var ProductsNavigator = function ProductsNavigator() {\n  return React.createElement(ProductsStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(ProductsStackNavigator.Screen, {\n    name: \"ProductsOverview\",\n    component: ProductsOverviewScreen,\n    options: productsOverviewScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(ProductsStackNavigator.Screen, {\n    name: \"ProductDetail\",\n    component: ProductDetailScreen,\n    options: productDetailScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(ProductsStackNavigator.Screen, {\n    name: \"Cart\",\n    component: CartScreen,\n    options: cartScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\nvar OrdersStackNavigator = createStackNavigator();\nexport var OrdersNavigator = function OrdersNavigator() {\n  return React.createElement(OrdersStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(OrdersStackNavigator.Screen, {\n    name: \"Orders\",\n    component: OrdersScreen,\n    options: ordersScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\nvar AdminStackNavigator = createStackNavigator();\nexport var AdminNavigator = function AdminNavigator() {\n  return React.createElement(AdminStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(AdminStackNavigator.Screen, {\n    name: \"UserProducts\",\n    component: UserProductsScreen,\n    options: userProductsScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(AdminStackNavigator.Screen, {\n    name: \"EditProduct\",\n    component: EditProductScreen,\n    options: editProductScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\nvar ShopDrawerNavigator = createDrawerNavigator();\nexport var ShopNavigator = function ShopNavigator() {\n  var dispatch = useDispatch();\n  return React.createElement(ShopDrawerNavigator.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'always',\n          horizontal: 'never'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, React.createElement(DrawerItemList, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      })), React.createElement(Button, {\n        title: \"Logout\",\n        color: Colors.primary,\n        onPress: function onPress() {\n          dispatch(authActions.logout());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      })));\n    },\n    drawerContentOptions: {\n      activeTintColor: Colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, React.createElement(ShopDrawerNavigator.Screen, {\n    name: \"Products\",\n    component: ProductsNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n          size: 23,\n          color: props.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), React.createElement(ShopDrawerNavigator.Screen, {\n    name: \"Orders\",\n    component: OrdersNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'android' ? 'md-list' : 'ios-list',\n          size: 23,\n          color: props.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), React.createElement(ShopDrawerNavigator.Screen, {\n    name: \"Admin\",\n    component: AdminNavigator,\n    options: {\n      drawerIcon: function drawerIcon(props) {\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n          size: 23,\n          color: props.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }));\n};\nvar AuthStackNavigator = createStackNavigator();\nexport var AuthNavigator = function AuthNavigator() {\n  return React.createElement(AuthStackNavigator.Navigator, {\n    screenOptions: defaultNavOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStackNavigator.Screen, {\n    name: \"Auth\",\n    component: AuthScreen,\n    options: authScreenOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/DATA/react-native/Cart-notification/navigation/ShopNavigator.js"],"names":["React","useEffect","createStackNavigator","createDrawerNavigator","DrawerItemList","Ionicons","useDispatch","ProductsOverviewScreen","screenOptions","productsOverviewScreenOptions","ProductDetailScreen","productDetailScreenOptions","CartScreen","cartScreenOptions","OrdersScreen","ordersScreenOptions","UserProductsScreen","userProductsScreenOptions","EditProductScreen","editProductScreenOptions","AuthScreen","authScreenOptions","StartupScreen","Colors","authActions","defaultNavOptions","headerStyle","backgroundColor","Platform","OS","primary","headerTitleStyle","fontFamily","headerBackTitleStyle","headerTintColor","ProductsStackNavigator","ProductsNavigator","OrdersStackNavigator","OrdersNavigator","AdminStackNavigator","AdminNavigator","ShopDrawerNavigator","ShopNavigator","dispatch","props","flex","paddingTop","top","horizontal","logout","activeTintColor","drawerIcon","color","AuthStackNavigator","AuthNavigator"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {AsyncStorage} from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {\n  createDrawerNavigator,\n  DrawerItemList\n} from '@react-navigation/drawer';\nimport { Platform, SafeAreaView, Button, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\n\nimport ProductsOverviewScreen, {\n  screenOptions as productsOverviewScreenOptions\n} from '../screens/shop/ProductsOverviewScreen';\nimport ProductDetailScreen, {\n  screenOptions as productDetailScreenOptions\n} from '../screens/shop/ProductDetailScreen';\nimport CartScreen, {\n  screenOptions as cartScreenOptions\n} from '../screens/shop/CartScreen';\nimport OrdersScreen, {\n  screenOptions as ordersScreenOptions\n} from '../screens/shop/OrdersScreen';\nimport UserProductsScreen, {\n  screenOptions as userProductsScreenOptions\n} from '../screens/user/UserProductsScreen';\nimport EditProductScreen, {\n  screenOptions as editProductScreenOptions\n} from '../screens/user/EditProductScreen';\nimport AuthScreen, {\n  screenOptions as authScreenOptions\n} from '../screens/user/AuthScreen';\nimport StartupScreen from '../screens/StartupScreen';\nimport Colors from '../constants/Colors';\nimport * as authActions from '../store/actions/auth';\n\nconst defaultNavOptions = {\n  headerStyle: {\n    backgroundColor: Platform.OS === 'android' ? Colors.primary : ''\n  },\n  headerTitleStyle: {\n    fontFamily: 'open-sans-bold'\n  },\n  headerBackTitleStyle: {\n    fontFamily: 'open-sans'\n  },\n  headerTintColor: Platform.OS === 'android' ? 'white' : Colors.primary\n};\n\nconst ProductsStackNavigator = createStackNavigator();\n\nexport const ProductsNavigator = () => {\n  return (\n    <ProductsStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <ProductsStackNavigator.Screen\n        name=\"ProductsOverview\"\n        component={ProductsOverviewScreen}\n        options={productsOverviewScreenOptions}\n      />\n      <ProductsStackNavigator.Screen\n        name=\"ProductDetail\"\n        component={ProductDetailScreen}\n        options={productDetailScreenOptions}\n      />\n      <ProductsStackNavigator.Screen\n        name=\"Cart\"\n        component={CartScreen}\n        options={cartScreenOptions}\n      />\n    </ProductsStackNavigator.Navigator>\n  );\n};\n\nconst OrdersStackNavigator = createStackNavigator();\n\nexport const OrdersNavigator = () => {\n  return (\n    <OrdersStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <OrdersStackNavigator.Screen\n        name=\"Orders\"\n        component={OrdersScreen}\n        options={ordersScreenOptions}\n      />\n    </OrdersStackNavigator.Navigator>\n  );\n};\n\nconst AdminStackNavigator = createStackNavigator();\n\nexport const AdminNavigator = () => {\n  return (\n    <AdminStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <AdminStackNavigator.Screen\n        name=\"UserProducts\"\n        component={UserProductsScreen}\n        options={userProductsScreenOptions}\n      />\n      <AdminStackNavigator.Screen\n        name=\"EditProduct\"\n        component={EditProductScreen}\n        options={editProductScreenOptions}\n      />\n    </AdminStackNavigator.Navigator>\n  );\n};\n\nconst ShopDrawerNavigator = createDrawerNavigator();\n\nexport const ShopNavigator = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <ShopDrawerNavigator.Navigator\n      drawerContent={props => {\n        return (\n          <View style={{ flex: 1, paddingTop: 20 }}>\n            <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n              <DrawerItemList {...props} />\n              <Button\n                title=\"Logout\"\n                color={Colors.primary}\n                onPress={() => {\n                  dispatch(authActions.logout());\n                  // props.navigation.navigate('Auth');\n                }}\n              />\n            </SafeAreaView>\n          </View>\n        );\n      }}\n      drawerContentOptions={{\n        activeTintColor: Colors.primary\n      }}\n    >\n      <ShopDrawerNavigator.Screen\n        name=\"Products\"\n        component={ProductsNavigator}\n        options={{\n          drawerIcon: props => (\n            <Ionicons\n              name={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\n              size={23}\n              color={props.color}\n            />\n          )\n        }}\n      />\n      <ShopDrawerNavigator.Screen\n        name=\"Orders\"\n        component={OrdersNavigator}\n        options={{\n          drawerIcon: props => (\n            <Ionicons\n              name={Platform.OS === 'android' ? 'md-list' : 'ios-list'}\n              size={23}\n              color={props.color}\n            />\n          )\n        }}\n      />\n        <ShopDrawerNavigator.Screen\n        name=\"Admin\"\n        component={AdminNavigator}\n        options={{\n          drawerIcon: props => (\n            <Ionicons\n              name={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\n              size={23}\n              color={props.color}\n            />\n          )\n        }}\n      />\n    </ShopDrawerNavigator.Navigator>\n  );\n};\n\nconst AuthStackNavigator = createStackNavigator();\n\nexport const AuthNavigator = () => {\n  return (\n    <AuthStackNavigator.Navigator screenOptions={defaultNavOptions}>\n      <AuthStackNavigator.Screen\n        name=\"Auth\"\n        component={AuthScreen}\n        options={authScreenOptions}\n      />\n    </AuthStackNavigator.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}